{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/jonkohen/Desktop/Portfolio/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// pages/index.js\nimport fetch from 'isomorphic-unfetch';\nimport Link from 'next/link';\nimport withLayout from '../components/MyLayout.js';\nHeader();\n\nvar Index = function Index(props) {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \" Batman TV Shows \"), \" \", __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \" \", props.shows.map(function (show) {\n    return __jsx(\"li\", {\n      key: show.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, __jsx(Link, {\n      href: \"/p/[id]\",\n      as: \"/p/\".concat(show.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \" \", show.name, \" \"), \" \"), \" \");\n  }), \" \"), \" \");\n};\n\nIndex.getInitialProps = function _callee() {\n  var res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch('https://api.tvmaze.com/search/shows?q=batman'));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          data = _context.sent;\n          console.log(\"Show data fetched. Count: \".concat(data.length));\n          return _context.abrupt(\"return\", {\n            shows: data.map(function (entry) {\n              return entry.show;\n            })\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/jonkohen/Desktop/Portfolio/pages/index.js"],"names":["fetch","Link","withLayout","Header","Index","props","shows","map","show","id","name","getInitialProps","res","json","data","console","log","length","entry"],"mappings":";;;;AAAA;AAEA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AAEAC,MAAM;;AAEN,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK;AAAA,SAAK,MACpB,MADoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFoB,OAGQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAEhBA,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgB,UAAAC,IAAI;AAAA,WAAK;AAC1B,MAAA,GAAG,EACMA,IAAI,CAACC,EAFY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIrB,MACR,IADQ;AACH,MAAA,IAAI,EAAC,SADF;AAEI,MAAA,EAAE,eACQD,IAAI,CAACC,EADb,CAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAEQD,IAAI,CAACE,IAFb,MALJ,MAJqB,MAAL;AAAA,GAApB,CAFgB,MAHR,MAAL;AAAA,CAAnB;;AA0BAN,KAAK,CAACO,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACFX,KAAK,CAAC,8CAAD,CADH;;AAAA;AACdY,UAAAA,GADc;AAAA;AAAA,2CAEuBA,GAAG,CAACC,IAAJ,EAFvB;;AAAA;AAEUC,UAAAA,IAFV;AAIpBC,UAAAA,OAAO,CAACC,GAAR,qCAAyCF,IAAI,CAACG,MAA9C;AAJoB,2CAMb;AACqBX,YAAAA,KAAK,EAAEQ,IAAI,CAACP,GAAL,CAAS,UAAAW,KAAK;AAAA,qBAAIA,KAAK,CAACV,IAAV;AAAA,aAAd;AAD5B,WANa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAWA,eAAeJ,KAAf","sourcesContent":["// pages/index.js\n\nimport fetch from 'isomorphic-unfetch';\nimport Link from 'next/link';\nimport withLayout from '../components/MyLayout.js';\n\nHeader();\n\nconst Index = props => (<\n    Layout >\n    <\n    h1 > Batman TV Shows < /h1> <\n    ul > {\n                props.shows.map(show => (<\n            li key={\n                        show.id\n                    } >\n                    <\n            Link href=\"/p/[id]\"\n                        as={\n                            `/p/${show.id}`\n                        } >\n                        <\n            a > {\n                                show.name\n                            } < /a> <\n            /Link> <\n            /li>\n                        ))\n    } <\n    /ul> <\n    /Layout>\n                        );\n                        \nIndex.getInitialProps = async function () {\n    const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n                            const data = await res.json();\n                        \n    console.log(`Show data fetched. Count: ${data.length}`);\n                        \n    return {\n                                shows: data.map(entry => entry.show)\n                        };\n                    };\n                    \nexport default Index;"]},"metadata":{},"sourceType":"module"}